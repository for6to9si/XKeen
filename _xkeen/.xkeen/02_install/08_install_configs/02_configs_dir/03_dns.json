// Настройки DNS
// Правила используются сверху вниз. По-сути, определяя приоретет. 
//
###############################################################################################
//
// 1. address — адрес нужного DNS сервера. При отсутствии порта в адресе — используется стандартный.
//
//
// "localhost" — DNS от хоста. К примеру, если у Вас включены на роутере DoH/DoT — будут использоваться они.
//
// Запросы будут отправляться с VPS. Увеличивает задержку.
// "IP:Port" — нешифрованных DNS с указанием порта. Пример записи: 8.8.8.8:53.
// "tcp://host:port" — DNS через TCP. Пример записи: tcp://8.8.8.8:53.
// "https://host:port/dns-query" — DNS через HTTPS. Пример записи: "https://dns.google/dns-query".
//
// Запросы будут отправляться с роутера, а не с VPS. Минимизирует задержку.
// "tcp+local://host:port" — DNS через TCP от хоста. Пример записи: "tcp+local://8.8.8.8:53"
// "https+local://host:port/dns-query" — DNS через HTTPS от хоста. Пример записи: "https+local://dns.google/dns-query"
// "quic+local://host" — DNS через QUIC от хоста. Пример азписи "quic+local://dns.adguard.com"
//
###############################################################################################
//
// 2. domain — указывается доменное имя или берется каталог из базы geosite.dat:tag.
// При использовании доменные адреса будут разрешаться через конкретные DNS.
//
// Частичное совпадение.
// "vk.com" = "vk.com.ru", "music.vk.com.ru", "www.vk.com/im" ≠ vk.ru
//
// Регулярное выражение.
// Пример записи: "regexp:\\.ya.*\\.ru$" = "www.yandex.ru", "mail.yandex.ru" ≠ "ya.ru"
// Обязательно начинается с "regexp:"
// 
// Поддомен.
// Пример записи: "domain:keenetic.com" = "forum.keenetic.com" ≠ "forum.keenetic12345.com"
// 
// Точное совпадение.
// Пример записи: "full:keenetic.com" = "keenetic.com" ≠ "www.keenetic.com", "keenetic123.com"
//
// Geosite
// "geosite:tag". Пример записи: "geosite:category-gov-ru"
// *К сожалению, geosite полноценно не знает доменных имен РФ, как следствие, каталог "ru" отстуствует
// *Можно заблокировать рекламу. "geosite:category-ads-all"
//
// Geosite / Кастомный
// "ext:geosite:tag". Пример записи: "ext:antizapret.dat:ZAPRETINFO"
//
###############################################################################################
//
// 3. expectIPs — указывается конкретный IP адрес или берется каталог из базы geoip.dat:tag.
// 
// Полное совпадение
// Пример записи: 30.30.30.30.
//
// CIRD
// Пример записи: 10.0.0.1/8
// Каждая секция адреса = 8бит. В сумме 32. 
// *Когда пишем /8 — мы говорим, что в первая секция — постоянная величина. Все другие неизвестны. Итого запись выглядит: 10.*.*.*
// *Когда пишем /16 — мы говорим, что первая и вторая секции —статические величины. Все другие неизвестны. Итого запись выглядит: 10.0.*.*
//
// Geoip
// "geoip:tag". Пример записи: "geoip:ru"
// *Geoip, в отличии от geosite, понимает русские IP.
// *Рекомендуется использовать "geoip:private", чтобы частные IP формата 127.0.0.1 не пытались использовать прокси-клиент.
// 
// Geoip / Кастомный
// "ext:Geoip:tag". Пример записи: "ext:antifilter.dat:allyouneed"
//
###############################################################################################
//
// 4. queryStrategy — использование IPv4 / IPv6 / IPv4+IPv6
// 
// UseIP — разрешает доменные имена в A (IPv4) и в AAAA (IPv6)
// *Значение поумолчанию. Если для Вас не имеет значение, в какой формат разрешать имена, то можете не добавлять параметр queryStrategy.
//
// UseIPv4 — разрешает доменные имена только в A (IPv4)
// Будет разрешать доменные имена только в A (IPv4). 
// Пример записи: "queryStrategy": "UseIPv4"
// *В случае, если для доменного имени отсутствует запись A, то соединение не будет установлено.
//
// UseIPv6 — разрешает доменные имена только в AAAA (IPv6)
// Будет разрешать доменные имена только в AAAA (IPv6). 
// Пример записи: "queryStrategy": "UseIPv6"
// *В случае, если для доменного имени отсутствует запись AAAA, то соединение не будет установлено.
//
// ** В случае неразрешения записи в IPv4/IPv6 — xray попробует обратиться к резервному DNS, если такой имеется. 
//
###############################################################################################
//
// 5. disableCache
// Пример записи: disableCache: true
// 
// true — выключает кэширование DNS запросов.
// В памяти не хранятся разрешенные ранее доменные имена и при каждом обращении разрешаются заново.
// *Уменьшает быстродействие загрузки страниц.
//
// false — какое-то время (в документации не описано какое) сохраняет в кэше DNS запросы.
// Сохраняет в кэше разрешенные ранее доменные имена.
// * При первой загрузке страницы и после сброса DNS кэша требуется разрешение. 
//    Поэтому первая загрузка будет с уменьшенным быстродействием.
// ** Значение поумолчанию. Если вас устраивает — disableCache можно не добавлять в конфигурацию.
//
###############################################################################################
//
// 6. disableFallback 
// Пример записи: "disableFallback": true
//
// true — если доменное имя не удалось разрешить, то не будут выполняться дополнительные запросы к следующим по списку серверам.
//
// fale — если первый DNS-сервер не может разрешить доменное имя, то обращается к следующим по списку серверам для получения адреса.
// *Значение поумолчанию. Если вас устраивает — disableFallback можно не добавлять в конфигурацию.
//
###############################################################################################
//
// 7. disableFallbackIfMatch
// Пример записи: "disableFallbackIfMatch": false
//
// true — если на сервере найдено совпадение с доменным списком. Дополнительные запросы к резервным серверам не выполняются.
//
// false — даже если совпадение найдено, обращается к резервным серверам.
// *Значение поумолчанию. Если вас устраивает — disableFallbackIfMatch можно не добавлять в конфигурацию.
// ** Если основной сервер по каким-то причинам не смог полноценно обработать запрос и для проверки актуального адреса доменного имени.
//
###############################################################################################
//
// 8. tag
// Пример записи: "tag": "dns-out"
//
// Используется для маркировки конкретной секии и связи ее с другим блоком конфигурации.

"dns": {
	"servers": [
		// 1 Запросы российских доменов выполняются через отечественный DoH от Yandex.
		{
			"address": "https://common.dot.dns.yandex.net",
			"domains": [
				"geosite:category-gov-ru", 
				".ru", 
				"whoer.net"],
			"expectIPs": ["geoip:ru"],
		},
		// 2 Запросы российских доменов выполняются через резервный DoH от AdGuard.
		{
			"address": "https://dns.adguard-dns.com/dns-query",
			"domains": [
				"geosite:category-gov-ru", 
				".ru", 
				"whoer.net"
				],
			"expectIPs": [
				"geoip:ru"
				],
		},
		// 3 Запросы иностранных доменов выполняются через иностранный DNS
		{
			"address": "https://dns.google/dns-query",
		},
		{
			"address": "https://dns.cloudflare.com/dns-query",
		},
		{
			"address": "https://dns.quad9.net/dns-query",
		},
		// 4 Последний резервный вариант: если все вышеперечисленные запросы не удалось выполнить, выполняется запрос через DNS хоста.
		"localhost"
	]
}